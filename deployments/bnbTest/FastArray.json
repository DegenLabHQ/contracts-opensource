{
  "address": "0xEDB80829E4ED4b4E6Ff7A178801b78586d279d26",
  "abi": [],
  "transactionHash": "0x815bcb3a7245684cddd94150c44a5e47274d7a6dde549b1013325e7489fe3a2d",
  "receipt": {
    "to": null,
    "from": "0xe0B4c9C36f5A5D0Ff3A547FeaBB6BC9Ba65805F2",
    "contractAddress": "0xEDB80829E4ED4b4E6Ff7A178801b78586d279d26",
    "transactionIndex": 1,
    "gasUsed": "103182",
    "logsBloom": "0x
    "blockHash": "0xfb158fadcea1f8fc5a6525ad25abac9b59997380cdccc3dd5664b89efdae3c4e",
    "transactionHash": "0x815bcb3a7245684cddd94150c44a5e47274d7a6dde549b1013325e7489fe3a2d",
    "logs": [],
    "blockNumber": 28115492,
    "cumulativeGasUsed": "124182",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "f6e6d452782abdad5dd9693be35085b8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(FastArray.Data storage,uint256)\":{\"notice\":\"PLease confirm index is not out of bounds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/FastArray.sol\":\"FastArray\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363739303334313737393130\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/lib/FastArray.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.17;\\n\\n// A simple array that supports insert and removal.\\n// The values are assumed to be unique and the library is meant to be lightweight.\\n// So when calling insert or remove, the caller is responsible to know whether a value already exists in the array or not.\\nlibrary FastArray {\\n    struct Data {\\n        mapping(uint256 => uint256) array;\\n        mapping(uint256 => uint256) indexMap;\\n        uint256 length;\\n    }\\n\\n    /**\\n     * @notice please confirm no eq item exist before insert\\n     */\\n    function insert(Data storage _fastArray, uint256 _value) internal {\\n        _fastArray.array[_fastArray.length] = _value;\\n        _fastArray.indexMap[_value] = _fastArray.length;\\n        _fastArray.length += 1;\\n    }\\n\\n    /**\\n     * @dev remove item from array,but not keep rest item sort\\n     * @notice Please confirm array is not empty && item is exist && index not out of bounds\\n     */\\n    function remove(Data storage _fastArray, uint256 _value) internal {\\n        uint256 index = _fastArray.indexMap[_value];\\n\\n        _fastArray.array[index] = _fastArray.array[_fastArray.length - 1];\\n        delete _fastArray.indexMap[_value];\\n        delete _fastArray.array[_fastArray.length - 1];\\n\\n        _fastArray.length -= 1;\\n    }\\n\\n    /**\\n     * @dev remove item and keep rest item in sort\\n     * @notice Please confirm array is not empty && item is exist && index not out of bounds\\n     */\\n    function removeKeepSort(Data storage _fastArray, uint256 _value) internal {\\n        uint256 index = _fastArray.indexMap[_value];\\n\\n        uint256 tempLastItem = _fastArray.array[_fastArray.length - 1];\\n\\n        for (uint256 i = index; i < _fastArray.length - 1; i++) {\\n            _fastArray.indexMap[_fastArray.array[i + 1]] = i;\\n            _fastArray.array[i] = _fastArray.array[i + 1];\\n        }\\n\\n        delete _fastArray.indexMap[tempLastItem];\\n        delete _fastArray.array[_fastArray.length - 1];\\n        _fastArray.length -= 1;\\n    }\\n\\n    /**\\n     * @notice PLease confirm index is not out of bounds\\n     */\\n    function get(\\n        Data storage _fastArray,\\n        uint256 _index\\n    ) public view returns (uint256) {\\n        return _fastArray.array[_index];\\n    }\\n\\n    function length(Data storage _fastArray) public view returns (uint256) {\\n        return _fastArray.length;\\n    }\\n\\n    function contains(\\n        Data storage _fastArray,\\n        uint256 _value\\n    ) public view returns (bool) {\\n        return _fastArray.indexMap[_value] != 0;\\n    }\\n}\\n\",\"keccak256\":\"0x1aafe47d78876fe514a190e95a87f4720f33617712c66cf95ab73c6dc3a19f3d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608080604052346100195760e6908161001f823930815050f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c90816317dce7e41460775750806324f9017a1460585763c9c3102d14603e57600080fd5b6040602091604a366096565b825283522054604051908152f35b602060408360016066366096565b835201835220541515604051908152f35b90506020366003190112609257602090600260043501548152f35b5080fd5b604090600319011260ab576004359060243590565b600080fdfea264697066735822122042e474f08baccd8f676f85c3fafad2d74d943a0967a417737ceea3cd8154cd9464736f6c63430008110033",
  "deployedBytecode": "0x6080806040526004361015601257600080fd5b600090813560e01c90816317dce7e41460775750806324f9017a1460585763c9c3102d14603e57600080fd5b6040602091604a366096565b825283522054604051908152f35b602060408360016066366096565b835201835220541515604051908152f35b90506020366003190112609257602090600260043501548152f35b5080fd5b604090600319011260ab576004359060243590565b600080fdfea264697066735822122042e474f08baccd8f676f85c3fafad2d74d943a0967a417737ceea3cd8154cd9464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(FastArray.Data storage,uint256)": {
        "notice": "PLease confirm index is not out of bounds"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}